/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEFAULT 0
#define SHIFTED 1
#define NAV 2

&sk {
    release-after-ms = <100>;
    quick-release;
};

&sl { release-after-ms = <100>; };

/ {
    conditional_layers { compatible = "zmk,conditional-layers"; };

    behaviors {
        hl_tk: behavior_hl_tk_hold_preferred {
            compatible = "zmk,behavior-hold-tap";
            label = "mo_kp";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&kp>;
        };

        tk_hl: behavior_tk_hl_tap_preferred {
            compatible = "zmk,behavior-hold-tap";
            label = "tk_hl";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <150>;
            bindings = <&mo>, <&kp>;
        };

        tk_hk: behavior_tk_hk_tap_preferred {
            compatible = "zmk,behavior-hold-tap";
            label = "tk_hk";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <150>;
            bindings = <&kp>, <&kp>;
        };

        hk_tk: behavior_hk_kt_tap_preferred {
            compatible = "zmk,behavior-hold-tap";
            label = "hk_tk";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            bindings = <&kp>, <&kp>;
        };

        backdel: backspace_delete {
            compatible = "zmk,behavior-mod-morph";
            label = "BACKSPACE_DEL";
            #binding-cells = <0>;
            bindings = <&kp BACKSPACE>, <&kp DEL>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        hk_qtk: hk_qtk {
            compatible = "zmk,behavior-hold-tap";
            label = "HK_QTK";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <270>;
        };

        hshift_tbsdel: hshift_tbsdel {
            compatible = "zmk,behavior-hold-tap";
            label = "HSHIFT_TBSDEL";
            bindings = <&kp>, <&backdel>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <270>;
        };

        hl_ttl: hl_ttl {
            compatible = "zmk,behavior-hold-tap";
            label = "HL_TTL";
            bindings = <&mo>, <&tog>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        lh_pht: left_hand_positional_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "LEFT_POSITIONAL_HOLD_TAP";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <0>;

            /* hold-trigger-key-positions = <6 18 31 30 44 43 54 55 56 45 46 57 47 48 49 35 23 11 9 34 22 10 21 32 33 20 8 7 19>; */

            flavor = "tap-preferred";
        };

        rh_pht: right_hand_positional_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "RIGHT_POSITIONAL_HOLD_TAP";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";

            /* hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41 42 50 51 52 53>; */
        };
    };

    combos {
        compatible = "zmk,combos";

        ek {
            bindings = <&kp RIGHT_ALT>;
            key-positions = <51 55>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default {
            bindings = <
&kp GRAVE         &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5                                       &kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8    &kp NUMBER_9  &kp NUMBER_0  &kp MINUS
&kp TAB           &kp Q         &kp W         &kp E         &kp R         &kp T                                              &kp Y         &kp U         &kp I           &kp O         &kp P         &kp EQUAL
&kp LEFT_COMMAND  &kp A         &kp S         &kp D         &kp F         &kp G                                              &kp H         &kp J         &kp K           &kp L         &kp SEMI      &kp SQT
&kp LSHFT         &kp Z         &kp X         &kp C         &kp V         &kp B         &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp N         &kp M         &kp COMMA       &kp DOT       &kp SLASH     &kp BACKSLASH
                                              &kp LEFT_ALT  &kp LCTRL     &mo 1         &kp LSHIFT        &kp ENTER          &kp SPACE     &backdel      &kp LANGUAGE_1
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        navigation {
            bindings = <
&kp ESC     &kp F1  &kp F2    &kp F3    &kp F4     &kp F5                  &kp F6  &kp F7      &kp F8         &kp F9  &kp F10    &kp F11
&kp INSERT  &none   &none     &kp UP    &none      &none                   &none   &kp HOME    &kp PAGE_UP    &none   &none      &kp F12
&none       &none   &kp LEFT  &kp DOWN  &kp RIGHT  &none                   &none   &kp END     &kp PAGE_DOWN  &none   &kp ENTER  &none
&trans      &none   &none     &none     &none      &none   &none   &none   &none   &none       &none          &none   &none      &none
                              &trans    &trans     &trans  &trans  &trans  &mo 2   &kp DELETE  &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        function {
            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &none                   &none  &none       &none         &none         &none  &none
&none       &none         &none         &none         &none         &none                   &none  &none       &none         &none         &none  &none
&none       &none         &none         &none         &none         &none                   &none  &none       &kp C_BRI_DN  &kp C_BRI_UP  &none  &none
&trans      &none         &none         &none         &none         &none   &none   &none   &none  &kp C_MUTE  &kp C_VOL_DN  &kp C_VOL_UP  &none  &none
                                        &trans        &trans        &trans  &trans  &trans  &mo 2  &trans      &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };
    };
};
